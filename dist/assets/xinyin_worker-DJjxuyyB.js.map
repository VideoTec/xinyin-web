{"version":3,"file":"xinyin_worker-DJjxuyyB.js","sources":["../xinyin_opfs.js","../xinyin_wasm.js","../xinyin_types.js","../xinyin_worker.js"],"sourcesContent":["/**\n * @constant\n * @type { string }\n * @description 心印密钥存储文件名称\n */\nconst SKS_STORE_NAME = \"sks\";\n\n/**\n * @type { FileSystemSyncAccessHandle }\n * @description 用于同步访问OPFS文件系统中的心印密钥存储文件\n */\nconst gSksSyncHandle = await (async function () {\n  let opfsRoot = await navigator.storage.getDirectory();\n  let sksFileHandle = await opfsRoot.getFileHandle(SKS_STORE_NAME, {\n    create: true,\n  });\n  return await sksFileHandle.createSyncAccessHandle();\n})();\n\nexport function clearSksCache() {\n  gSksSyncHandle.truncate(0); // 清空文件内容\n}\n\n/**\n * @param {string} sk - (salt || nonce || encrypted sk) in base64 format\n */\nexport function saveEncryptedSkBase64(sk) {\n  let size = gSksSyncHandle.getSize();\n  let buf = new TextEncoder().encode(sk + \"\\n\"); // 添加换行符以分隔每个密钥\n  gSksSyncHandle.write(buf, { at: size });\n  gSksSyncHandle.flush();\n}\n\n/**\n * 从OPFS文件系统中加载解密后的心印密钥列表\n * @returns {string[]} - 返回解密后的心印密钥列表\n */\nexport function loadEncryptedSks() {\n  let size = gSksSyncHandle.getSize();\n  let buf = new ArrayBuffer(size);\n\n  gSksSyncHandle.read(buf, { at: 0 });\n\n  let sksTxt = new TextDecoder().decode(new Uint8Array(buf));\n  let sks = sksTxt.split(\"\\n\").filter((line) => line.trim() !== \"\"); // 过滤掉空行\n\n  return sks;\n}\n","// @ts-nocheck\nimport { loadEncryptedSks, saveEncryptedSkBase64 } from './xinyin_opfs.js';\n\nlet wasm;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    for (let i = 0; i < array.length; i++) {\n        const add = addToExternrefTable0(array[i]);\n        getDataViewMemory0().setUint32(ptr + 4 * i, add, true);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_2.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * @param {string} address\n * @param {Uint8Array} message\n * @param {string} psw\n * @returns {Uint8Array}\n */\nexport function sign_message(address, message, psw) {\n    const ptr0 = passStringToWasm0(address, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(psw, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_message(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[3]) {\n        throw takeFromExternrefTable0(ret[2]);\n    }\n    var v4 = getArrayU8FromWasm0(ret[0], ret[1]).slice();\n    wasm.__wbindgen_free(ret[0], ret[1] * 1, 1);\n    return v4;\n}\n\n/**\n * @param {string} words32\n * @param {string} txt_in_heart\n * @param {number} start\n * @param {number} count\n * @param {string} psw\n * @returns {string}\n */\nexport function import_xinyin_words32(words32, txt_in_heart, start, count, psw) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const ptr0 = passStringToWasm0(words32, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(txt_in_heart, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(psw, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ret = wasm.import_xinyin_words32(ptr0, len0, ptr1, len1, start, count, ptr2, len2);\n        var ptr4 = ret[0];\n        var len4 = ret[1];\n        if (ret[3]) {\n            ptr4 = 0; len4 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred5_0 = ptr4;\n        deferred5_1 = len4;\n        return getStringFromWasm0(ptr4, len4);\n    } finally {\n        wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @param {string} txt_in_heart\n * @param {number} start\n * @param {number} count\n * @returns {string}\n */\nexport function generate_xinyin_words32(txt_in_heart, start, count) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(txt_in_heart, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.generate_xinyin_words32(ptr0, len0, start, count);\n        var ptr2 = ret[0];\n        var len2 = ret[1];\n        if (ret[3]) {\n            ptr2 = 0; len2 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_getRandomValues_3c9c0d586e575a16 = function() { return handleError(function (arg0, arg1) {\n        globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n    }, arguments) };\n    imports.wbg.__wbg_loadEncryptedSks_1021053599cb67a2 = function(arg0) {\n        const ret = loadEncryptedSks();\n        const ptr1 = passArrayJsValueToWasm0(ret, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_saveEncryptedSkBase64_c939fbbe17193bcf = function(arg0, arg1) {\n        saveEncryptedSkBase64(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('xinyin_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","/**\n * @enum { string }\n */\nexport const XinYinMessageCode = {\n  /** 生成随机密钥，返回心印助记字（32个汉字） */\n  GenerateWords32: \"generate-words32\",\n  GenerateWords32Result: \"words32-generated-result\",\n  /** 导入心印助记字，返回Solana地址 */\n  ImportWords32: \"import-words32\",\n  ImportWords32Result: \"words32-imported-result\",\n  /** 签名消息，返回签名结果 */\n  SignMessage: \"sign-message\",\n  SignMessageResult: \"message-signed-result\",\n  /** 导入的密钥列表 */\n  ListSks: \"list-sks\",\n  ListSksResult: \"sks-listed-result\",\n  /** 清理缓存 */\n  ClearSksCache: \"clear-sks-cache\",\n  ClearSksCacheResult: \"sks-cache-cleared-result\",\n  /** worker 准备就绪 */\n  WorkerReady: \"worker-ready\",\n  /** 未知消息类型 */\n  Unknown: \"unknown\",\n};\n\n/**\n * @typedef { Object } XinYinMessage\n * @property { XinYinMessageCode } code - The message code.\n * @property { number} requestId\n *  - The request ID for tracking.\n *  - if requestId is -1, wihtout requestId, because the message is sending from the worker.\n * @property { string } [txtInHeart] - 心印文本.\n * @property { number } [startOf8105] - The starting index for charset-8105.\n * @property { number } [countFrom8105] - The count of chars retrieved from charset-8105.\n * @property { string } [words32] - 心印助记字（32个汉字）.\n * @property { string } [passphrase] - The passphrase for encryption.\n * @property { string } [solanaAddress] - The Solana address.\n * @property { Uint8Array } [messageUint8] - The message to be signed, as a Uint8Array.\n * @property { Uint8Array } [signature] - The signature of the message, as a Uint8Array.\n * @property { Array.<string> } [sks] - The secret key in base58 format.\n * @property { string } [errorMessage] - The error message, if any.\n */\n","import xinyin_wasm, {\n  import_xinyin_words32,\n  generate_xinyin_words32,\n  sign_message,\n} from \"./xinyin_wasm.js\";\n\nimport { XinYinMessageCode } from \"./xinyin_types.js\";\nimport { loadEncryptedSks, clearSksCache } from \"./xinyin_opfs.js\";\n\nxinyin_wasm()\n  .then(() => {\n    postMessageToXinyinMain({\n      code: XinYinMessageCode.WorkerReady,\n      requestId: -1,\n    });\n  })\n  .catch((err) => {\n    postMessageToXinyinMain({\n      code: XinYinMessageCode.WorkerReady,\n      requestId: -1,\n      errorMessage: `初始化 wasm 模块失败: ${err}`,\n    });\n  });\n\n/**\n * @typedef { import('./xinyin_types.js').XinYinMessage } XinYinMessage\n */\n\nself.onmessage = async (/** @type {{data: XinYinMessage}} */ event) => {\n  onXinYinMessage(event.data);\n};\n\n/** * 发送消息到心印主线程\n * @param { XinYinMessage } message\n */\nfunction postMessageToXinyinMain(message) {\n  self.postMessage(message);\n}\n\n/**\n * @param { XinYinMessage } message\n */\nfunction onXinYinMessage(message) {\n  /** @type { XinYinMessage } */\n  let responseMsg = {\n    code: XinYinMessageCode.Unknown,\n    requestId: message.requestId,\n  };\n\n  switch (message.code) {\n    case XinYinMessageCode.GenerateWords32: {\n      responseMsg.code = XinYinMessageCode.GenerateWords32Result;\n      try {\n        responseMsg.words32 = generate_xinyin_words32(\n          message.txtInHeart,\n          message.startOf8105,\n          message.countFrom8105\n        );\n      } catch (error) {\n        responseMsg.errorMessage = error;\n      }\n      break;\n    }\n\n    case XinYinMessageCode.ImportWords32: {\n      responseMsg.code = XinYinMessageCode.ImportWords32Result;\n      try {\n        responseMsg.solanaAddress = import_xinyin_words32(\n          message.words32,\n          message.txtInHeart,\n          message.startOf8105,\n          message.countFrom8105,\n          message.passphrase\n        );\n      } catch (error) {\n        responseMsg.errorMessage = error;\n      }\n      break;\n    }\n\n    case XinYinMessageCode.SignMessage: {\n      responseMsg.code = XinYinMessageCode.SignMessageResult;\n      try {\n        responseMsg.signature = sign_message(\n          message.solanaAddress,\n          message.messageUint8,\n          message.passphrase\n        );\n      } catch (error) {\n        responseMsg.errorMessage = error;\n      }\n      break;\n    }\n\n    case XinYinMessageCode.ClearSksCache: {\n      responseMsg.code = XinYinMessageCode.ClearSksCacheResult;\n      clearSksCache();\n      break;\n    }\n\n    case XinYinMessageCode.ListSks: {\n      responseMsg.code = XinYinMessageCode.ListSksResult;\n      try {\n        responseMsg.sks = loadEncryptedSks();\n      } catch (error) {\n        responseMsg.errorMessage = error;\n      }\n      break;\n    }\n\n    default: {\n      responseMsg.errorMessage = `未知的消息类型: ${message.code}`;\n    }\n  }\n\n  self.postMessage(responseMsg);\n}\n"],"names":["SKS_STORE_NAME","gSksSyncHandle","clearSksCache","saveEncryptedSkBase64","sk","size","buf","loadEncryptedSks","line","wasm","cachedUint8ArrayMemory0","getUint8ArrayMemory0","getArrayU8FromWasm0","ptr","len","addToExternrefTable0","obj","idx","handleError","f","args","e","cachedDataViewMemory0","getDataViewMemory0","WASM_VECTOR_LEN","passArrayJsValueToWasm0","array","malloc","i","add","cachedTextDecoder","getStringFromWasm0","cachedTextEncoder","encodeString","arg","view","passStringToWasm0","realloc","mem","offset","code","ret","isLikeNone","x","passArray8ToWasm0","takeFromExternrefTable0","value","sign_message","address","message","psw","ptr0","len0","ptr1","len1","ptr2","len2","v4","import_xinyin_words32","words32","txt_in_heart","start","count","deferred5_0","deferred5_1","ptr4","len4","generate_xinyin_words32","deferred3_0","deferred3_1","__wbg_load","module","imports","bytes","instance","__wbg_get_imports","arg0","arg1","table","__wbg_finalize_init","__wbg_init","module_or_path","XinYinMessageCode","xinyin_wasm","postMessageToXinyinMain","err","event","onXinYinMessage","responseMsg","error"],"mappings":"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"}